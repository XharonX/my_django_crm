# Generated by Django 4.2.7 on 2023-11-26 20:58

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('department', models.CharField(choices=[('Sale', 'sale'), ('Techniciantechnician', 'Tech'), ('Service', 'service'), ('Maketing', 'marketing'), ('General', 'gen'), ('Audit', 'audit'), ('Finance', 'finance'), ('Research', 'research'), ('Warehouse', 'wh'), ('HR', 'hr')], max_length=20, verbose_name='department')),
                ('position', models.CharField(choices=[('Executive', '1'), ('Manager', '2'), ('Sale', '3'), ('Admin', '4'), ('Staff', '5')], max_length=20, verbose_name='position')),
                ('salary', models.IntegerField()),
                ('aboutme', models.TextField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('employees.user',),
        ),
        migrations.CreateModel(
            name='Finance',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('employees.user',),
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
            ],
            options={
                'verbose_name': 'Sale',
                'verbose_name_plural': 'Sales',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('employees.user',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('employees.user',),
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
            ],
            options={
                'verbose_name': 'Technician',
                'verbose_name_plural': 'Technicians',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('employees.user',),
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('employees.user',),
        ),
    ]
